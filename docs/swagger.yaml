basePath: /api/v1
definitions:
  utils.Error:
    properties:
      code:
        example: USER_NAME_EXIST
        type: string
      message:
        example: user name exist
        type: string
    type: object
  v1.AllItemsResponse:
    properties:
      code:
        example: success
        type: string
      items:
        items:
          $ref: '#/definitions/v1.Item'
        type: array
      total:
        example: 10
        type: integer
    type: object
  v1.Event:
    properties:
      event_description:
        type: string
      event_id:
        type: integer
      event_name:
        example: helloworld
        type: string
      start_time:
        type: string
      time_duration:
        type: integer
    type: object
  v1.EventItem:
    properties:
      collection_id:
        example: 5
        type: integer
      image:
        type: string
      item_id:
        example: 123455
        type: integer
      localFavorites:
        example: 1
        type: integer
      ownerId:
        example: mazhengwang-ust-hk
        type: string
    type: object
  v1.EventItemsResponse:
    properties:
      code:
        example: SUCCESS
        type: string
      items:
        items:
          $ref: '#/definitions/v1.EventItem'
        type: array
      totel:
        example: 1
        type: integer
    type: object
  v1.EventResponse:
    properties:
      code:
        type: string
      event:
        $ref: '#/definitions/v1.Event'
    type: object
  v1.EventsResponse:
    properties:
      code:
        type: string
      events:
        items:
          $ref: '#/definitions/v1.Event'
        type: array
      total:
        type: integer
    type: object
  v1.Item:
    properties:
      collection_id:
        example: 5
        type: integer
      createrId:
        example: mazhengwang-ust-hk
        type: string
      favorites:
        example: 1
        type: integer
      image:
        type: string
      item_id:
        example: 123455
        type: integer
      ownerId:
        example: mazhengwang-ust-hk
        type: string
    type: object
  v1.JoinEventResponse:
    properties:
      code:
        example: SUCCESS,USER_JOINED
        type: string
    type: object
host: http://pascal.idea.ust.hk:8888
info:
  contact: {}
  description: HKUST-NFT Server API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: HKUST-NFT
  version: "1.0"
paths:
  /{id}:
    get:
      consumes:
      - application/json
      description: get user:if username == id, return all information includes password
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/Anna
          schema:
            type: string
      tags:
      - account
  /{id}/change-profile:
    post:
      consumes:
      - application/json
      description: change profile
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: user Name
        in: query
        name: userName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/Anna/change-profile
          schema:
            type: string
      tags:
      - account
  /{id}/collected:
    get:
      consumes:
      - application/json
      description: collected
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/Anna/collected
          schema:
            type: string
      tags:
      - account
  /{id}/create-collection:
    post:
      consumes:
      - application/json
      description: create-collection
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: collection Name
        in: query
        name: collection-Name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/Anna/create-collection
          schema:
            type: string
      tags:
      - account
  /{id}/create-item:
    post:
      consumes:
      - application/json
      description: create-item
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: item Name
        in: query
        name: item-Name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/Anna/create-item
          schema:
            type: string
      tags:
      - account
  /{id}/creation:
    get:
      consumes:
      - application/json
      description: creation
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/Anna/creation
          schema:
            type: string
      tags:
      - account
  /{id}/edit-collection:
    post:
      consumes:
      - application/json
      description: edit-collection
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: collection Name
        in: query
        name: collection-Name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/Anna/edit-collection
          schema:
            type: string
      tags:
      - account
  /{id}/edit-item:
    post:
      consumes:
      - application/json
      description: edit-item
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: item Name
        in: query
        name: item-Name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/Anna/edit-item
          schema:
            type: string
      tags:
      - account
  /{id}/favorites:
    get:
      consumes:
      - application/json
      description: favorites
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/Anna/favorites
          schema:
            type: string
      tags:
      - account
  /{item-id}:
    get:
      consumes:
      - application/json
      description: item json msg
      parameters:
      - description: collection id
        in: path
        name: item-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/XXXX
          schema:
            $ref: '#/definitions/v1.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - item
  /collections:
    get:
      consumes:
      - application/json
      description: get all collections under the current account
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/collections
          schema:
            type: string
      tags:
      - collection
  /collections/{collection-id}:
    get:
      consumes:
      - application/json
      description: get single collection by id
      parameters:
      - description: collection id
        in: path
        name: collection-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/collections/XXXX
          schema:
            type: string
      tags:
      - collection
  /collections/{collection-id}/items:
    get:
      consumes:
      - application/json
      description: all items in collection
      parameters:
      - description: collection id
        in: path
        name: collection-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/collections/XXXXX/items
          schema:
            type: string
      tags:
      - collection
  /create:
    post:
      consumes:
      - application/json
      description: create new collection
      produces:
      - application/json
      responses:
        "200":
          description: POST /api/v1/collections/create
          schema:
            type: string
      tags:
      - collection
  /event-banner:
    get:
      consumes:
      - application/json
      description: event-banner
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/event-banner
          schema:
            type: string
      tags:
      - tour
  /events:
    get:
      consumes:
      - application/json
      description: all events
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/events
          schema:
            $ref: '#/definitions/v1.EventsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /events/{event-id}:
    get:
      consumes:
      - application/json
      description: single event
      parameters:
      - description: event id
        in: path
        name: event-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/events/balala
          schema:
            $ref: '#/definitions/v1.EventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /events/{event-id}/items:
    get:
      consumes:
      - application/json
      description: items in event
      parameters:
      - description: event id
        in: path
        name: event-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/events/balala/items
          schema:
            $ref: '#/definitions/v1.EventItemsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /events/{event-id}/join:
    post:
      consumes:
      - application/json
      description: user join event
      parameters:
      - description: event id
        in: path
        name: event-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/events/balala/join
          schema:
            $ref: '#/definitions/v1.JoinEventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /events/{event-id}/likes:
    post:
      consumes:
      - application/json
      description: user join event
      parameters:
      - description: event id
        in: path
        name: event-id
        required: true
        type: integer
      - description: item id
        in: query
        name: item-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/events/balala/likes
          schema:
            $ref: '#/definitions/v1.JoinEventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /events/{event-id}/ranks:
    get:
      consumes:
      - application/json
      description: item ranks in event
      parameters:
      - description: event id
        in: path
        name: event-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/events/balala/ranks
          schema:
            $ref: '#/definitions/v1.EventItemsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /events/{event-id}/submit-item:
    post:
      consumes:
      - application/json
      description: user submit item
      parameters:
      - description: event id
        in: path
        name: event-id
        required: true
        type: string
      - description: item id
        in: query
        name: item-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/events/balala/submit-item
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - event
  /items:
    get:
      consumes:
      - application/json
      description: all items
      parameters:
      - description: favorites,popular,newest
        in: query
        name: sort-by
        type: string
      - description: image,video,audio
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/items
          schema:
            $ref: '#/definitions/v1.AllItemsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - item
  /items/{item-id}:
    get:
      consumes:
      - application/json
      description: single item
      parameters:
      - description: collection id
        in: path
        name: item-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/v1/items/yiiiiiii
          schema:
            $ref: '#/definitions/v1.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      tags:
      - item
  /tour:
    get:
      consumes:
      - application/json
      description: tour
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/tour
          schema:
            type: string
      tags:
      - tour
  /tr/articles:
    get:
      consumes:
      - application/json
      description: tutorials
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/tr/articles
          schema:
            type: string
      tags:
      - tour
  /tr/articles/:articles-id:
    post:
      consumes:
      - application/json
      description: view articles by title
      produces:
      - application/json
      responses:
        "200":
          description: GET/api/tr/articles/XXXXXX
          schema:
            type: string
      tags:
      - tour
  /users/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: email
        in: query
        name: email
        required: true
        type: string
      - description: name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/users
          schema:
            type: string
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: email
        in: query
        name: email
        required: true
        type: string
      - description: passwd
        in: query
        name: passwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/users
          schema:
            type: string
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: email
        in: query
        name: Email
        required: true
        type: string
      - description: passwd
        in: query
        name: Passwd
        required: true
        type: string
      - description: name
        in: query
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/users
          schema:
            type: string
      tags:
      - user
  /users/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: email
        in: query
        name: email
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      - description: newpasswd
        in: query
        name: newpasswd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: POST/api/v1/users
          schema:
            type: string
      tags:
      - user
swagger: "2.0"
