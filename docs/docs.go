// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/item/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "item_name",
                        "name": "item_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "item_data",
                        "name": "item_data",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "description",
                        "name": "description",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "item_collection",
                        "name": "item_collection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "label",
                        "name": "label",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "0": {
                        "description": "Operation Succeed, code: 0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "1000": {
                        "description": "request error",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "2000": {
                        "description": "error code and message and nil data",
                        "schema": {
                            "$ref": "#/definitions/base.Response"
                        }
                    }
                }
            }
        },
        "/item/edit": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "item-id",
                        "name": "item-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "item_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "collection",
                        "name": "collection_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "label",
                        "name": "label",
                        "in": "query"
                    }
                ],
                "responses": {
                    "0": {
                        "description": "Operation Succeed, code: 0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "1000": {
                        "description": "request error",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "2000": {
                        "description": "error code and message and nil data",
                        "schema": {
                            "$ref": "#/definitions/base.Response"
                        }
                    }
                }
            }
        },
        "/item/like": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "item-id",
                        "name": "item-id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "0": {
                        "description": "Operation Succeed",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "1000": {
                        "description": "request error",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "2000": {
                        "description": "error code and message and nil data",
                        "schema": {
                            "$ref": "#/definitions/base.Response"
                        }
                    }
                }
            }
        },
        "/item/transfer": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "to user id",
                        "name": "to_user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "item id",
                        "name": "item_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "0": {
                        "description": "Operation Succeed",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "1000": {
                        "description": "request error",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "2000": {
                        "description": "error code and message and nil data",
                        "schema": {
                            "$ref": "#/definitions/base.Response"
                        }
                    }
                }
            }
        },
        "/items/item-json": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "token id of one NFT",
                        "name": "token-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "0": {
                        "description": "Operation Succeed, code: 0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "request error",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "error code and message and nil data",
                        "schema": {
                            "$ref": "#/definitions/base.Response"
                        }
                    }
                }
            }
        },
        "/list/collection": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection id",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "0": {
                        "description": "Operation Succeed, code: 0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "request error",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "error code and message and nil data",
                        "schema": {
                            "$ref": "#/definitions/base.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "base.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "错误码",
                    "type": "integer"
                },
                "data": {
                    "description": "返回数据"
                },
                "msg": {
                    "description": "错误描述",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "unifit.ust.hk:8888",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "HKUST-NFT",
	Description:      "HKUST-NFT Server API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
